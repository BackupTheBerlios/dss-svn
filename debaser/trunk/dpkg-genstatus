#!/bin/bash
# $Id: dpkg-genstatus,v 1.2 2005/09/19 09:46:40 sf-debaser Exp $
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU Library General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with this program; if not, write to the Free Software
# Foundation, Inc., 59 Temple Place - Suite 330, Boston, MA 02111-1307, USA.

# Daniele Favara <sf.debaser@gmail.com> <http://debased.sourceforge.net>
usage()
{
  echo ""
  echo "dpkg-genstatus: split the dpkg status file"
  echo "in <pkge.status> file into /var/lib/dpkg/unionfs" 
  echo "or merge it from those files in <path>/tmp/status"
  echo "--"
  echo "<http://debased.sourceforge.net>"
  echo
  cat <<EOF
usage (to split): dpkg-genstatus -d <path> [-f <status file>]
usage (to merge): dpkg-genstatus -g -d <path>   
EOF
} 
if [ -z "$1" ];then
	usage
	exit
fi

while [ ! -z "$1" ];do
    case "$1" in
      -h)
        usage
        exit 
        ;;
      -d)
        DIR=$2
		if [ -z "$DIR" ];then
		  usage
		  exit
		fi
		shift 2
        ;;
	  -f)
	  	STATUSFILE=$2
	  	if [ ! -f "$STATUSFILE" ];then
			echo "$STATUSFILE does not exists"
			exit
		fi
		shift 2
		DONTGEN=no
        ;;
	   -g)
	  	GEN=yes
		shift 1
        ;;
	   *)
	  	usage
		echo "---"
		echo "(EE): $1  not a valid option"
		echo ""
		exit 1
        ;;
    esac
  done

#check
[ -n "$GEN" ] && [ -n "$DONTGEN" ] && usage && exit 1
[ -z "$DIR" ] && usage && exit 1

DIR_STATUS=$DIR/var/lib/dpkg/unionfs
DIR_INFO=$DIR/var/lib/dpkg/info


#----------------------------------------------split
if [ "$GEN" != "yes" ];then
	
if [ -z "$STATUSFILE" ];then
	STATUSFILE="$DIR/var/lib/dpkg/status"
fi
TMPSTATUSFILE="$DIR/tmp/status.$$"
cp $STATUSFILE $TMPSTATUSFILE

dpkg_genstatus(){
	pkge=$1
	PKGES=$2
	trick=0	


	max_line=$( wc -l $PKGES | awk '{print $1}')
	pkge_line=$( grep -wxn "Package: $pkge" $PKGES | awk 'BEGIN { FS = "[:]" }{ print $1 }'  )
	i=2
	if [ "$pkge_line" != "" ];then
		for a in $pkge_line
		do
	        
			to=$(echo $pkge_line | awk 'BEGIN { try='$i' } {print $(try) }')
		
			next_pkge=$(grep  -wn "Package:" $PKGES | grep -A 1 -w "$a" | awk 'BEGIN { FS = "[:]" }{ print $1 }')
		
			to=$( echo $next_pkge | awk '{print $2 }')
		
			if [ "$to" = "" ];then
				to=$max_line
			fi	
			let to-=1
			tmp=$(sed -ne "$a,$to"p $PKGES)
			ver=$( echo "$tmp" | grep -w "Version:" | awk '{print $2}' )
			
			if dpkg --compare-versions "$ver" gt "$trick";then
				new_tmp=$tmp
				trick=$ver
			fi
			let i+=1
		
		done
		if [ ! -f "$DIR_STATUS/$pkge.status" ];then
			echo "$pkge"
			echo "$new_tmp" > $DIR_STATUS/$pkge.status
			echo >> $DIR_STATUS/$pkge.status
		fi

	fi
		
}

for i in $DIR_INFO/*.list
	do 
		if [ -f "$i" ];then
			add=$( basename $i  )
			newadd=${add/.list}
			pkges="$pkges $newadd"
		fi
	done

	if [ ! -d "$DIR_STATUS" ];then
		mkdir -p $DIR_STATUS
	fi

	for i in $pkges 
	do 
	
		dpkg_genstatus $i $TMPSTATUSFILE
	done

	if [ -f "$TMPSTATUSFILE" ];then
		rm $TMPSTATUSFILE
	fi
fi
#----------------------------------------------split

#----------------------------------------------gen
if [ "$GEN" = "yes" ];then
	if [ ! -d "$DIR_STATUS" ];then
		echo "$DIR_STATUS does not exist"
		usage
		exit
	else
		if [ -f $DIR/tmp/status ];then
			rm -f  $DIR/tmp/status
		fi
		for i in $DIR_STATUS/*.status ;do
			
			name=$(basename $i)
			echo "${name/.status}"
			cat $i >> $DIR/tmp/status
			
		done
		echo ------
		echo "status:  $DIR/tmp/status"
		echo ------
	fi

fi

#----------------------------------------------gen

