# $Id: debconf.conf 38 2005-10-11 10:37:15Z nomed $

# DSS-LV
# Daniele Favara <danjele@gmail.com> 2005
# <http://dss.berlios.de>


# This is the main config file for debconf. It tells debconf where to
# store data. The format of this file is a set of stanzas. Each stanza
# except the first sets up a database for debconf to use. For details, see
# debconf.conf(5) (in the debconf-doc package).
#
# So first things first. This first stanza gives the names of two databases.

# Debconf will use this database to store the data you enter into it,
# and some other dynamic data.
Config: configdb
# Debconf will use this database to store static template data.
Templates: templatedb


#------------------------------------------------------
# World-readable, and accepts everything but passwords.
Name: config
Driver: DirTree
Reject-Type: password
Directory: /DSSLV/debconf/config
Extension: .txt
Readonly: false
#-------
#Name: config
#Driver: File
#Mode: 644
#Reject-Type: password
#Filename: /DSSLV/debconf/config.dat
#Readonly: false

#-----------------------------------------------
# DSS cofig to override the defaults setvalue
Name: DSS-config
Driver: DirTree
Reject-Type: password
Directory: /DSSLV/debconf/DSS-config
Extension: .txt
Readonly: true #(should be ro)
#--------
#Name: DSS-config
#Driver: File
#Reject-Type: password
#Filename: /var/cache/debconf/config.dat
#Readonly: true





# Not world readable (the default), and accepts only passwords.
Name: passwords
Driver: File
Mode: 600
Backup: false
Required: false
Accept-Type: password
Filename: /DSSLV/debconf/passwords.dat


# Set up the configdb database. By default, it consists of a stack of two
# databases, one to hold passwords and one for everything else.
Name: configdb
Driver: Stack
Stack:  DSS-config, config, passwords

#---------------------------------------
# Set up the templatedb database, which is a single flat text file
# by default.
Name: templatedb
Driver: DirTree
Directory: /DSSLV/debconf/templates
Extension: .txt
Readonly: false
#----------
#Name: templatedb
#Driver: File
#Mode: 644
#Filename: /DSSLV/debconf/templates.dat
#Readonly: false


# Well that was pretty straightforward, and it will be enough for most
# people's needs, but debconf's database drivers can be used to do much
# more interesting things. For example, suppose you want to use config 
# data from another host, which is mounted over nfs or perhaps the database
# is accessed via LDAP. You don't want to write to the remote debconf database,
# just read from it, so you still need a local database for local changes.
#
# A remote NFS mounted database, read-only. It is optional; if debconf
# fails to use it it will not abort.
#Name: remotedb
#Driver: DirTree
#Directory: /mnt/otherhost/var/cache/debconf/config
#Readonly: true
#Required: false
#
# A remote LDAP database. It is also read-only. The password is really
# only necessary if the database is not accessible anonymously.
#Name: remotedb
#Driver: LDAP
#Server: remotehost
#BaseDN: cn=debconf,dc=domain,dc=com
#BindDN: uid=admin,dc=domain,dc=com
#BindPasswd: secret
#
# A stack consisting of two databases. Values will be read from
# the first database in the stack to contain a value. In this example,
# writes always go to the first database.
#Name: fulldb
#Driver: Stack
#Stack: configdb, remotedb
#
# In this example, we'd use Config: fulldb at the top of the file
# to make it use the combination of the databases.
#
# Even more complex and interesting setups are possible, see the 
# debconf.conf(5) page for details.
